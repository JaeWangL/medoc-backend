# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthTokensDto {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
}

type AuthUserDto {
  """JWT access token"""
  accessToken: String!

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  id: ID!

  """JWT refresh token"""
  refreshToken: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  userName: String!
}

input CreateDoctorInput {
  name: String!
  profileUrl: String!
  userId: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DoctorDetailDto {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  name: String!
  profileUrl: String!
  rating: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  userId: Int!
}

input FindUserInput {
  id: Int!
}

type Mutation {
  createDoctor(data: CreateDoctorInput!): DoctorDetailDto!
  refreshToken(data: RefreshTokenInput!): AuthTokensDto!
  signIn(data: SignInInput!): AuthUserDto!
  signUp(data: SignUpInput!): Boolean!
}

type Query {
  findUser(args: FindUserInput!): UserDetailDto!
  hello(name: String!): String!
  helloWorld: String!
}

input RefreshTokenInput {
  """JWT refresh token"""
  refreshToken: String!
}

enum Roles {
  Admin
  Manager
  User
}

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  password: String!
  userName: String!
}

type UserDetailDto {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  id: ID!
  role: Roles!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  userName: String!
}
